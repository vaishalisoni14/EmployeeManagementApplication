@model IEnumerable<EmployeeManagementApplication.Models.EmployeeView>

@{
    ViewData["Title"] = "Demo";
    Layout = "_Layout2";


    var sortDirection = ViewBag.sortDirection;
    var sortColumn = ViewBag.sortColumn;
    var searchKeyword = ViewBag.searchKeyword;
    var page = ViewBag.page;
    var pageSize = ViewBag.pageSize;
    var genderIds = ViewBag.genderIds;
    var departmentIds = ViewBag.departmentIds;
    var minAge = ViewBag.minAge;
    var maxAge = ViewBag.maxAge;
    var minSalary = ViewBag.minSalary;
    var maxSalary = ViewBag.maxSalary;
    var totalPages = ViewBag.totalPages;
    var totalRecords = ViewBag.totalRecords;
}

<!--begin::App Content Header-->
<div class="app-content-header">
    <!--begin::Container-->
    <div class="container-fluid">
        <!--begin::Row-->
        <div class="row">
            <div class="col-sm-12">
                <div class="row">
                    <div class="col-6">

                        <h4>Employee Management Application</h4>

                    </div>

                    <div class="col-6">
                        <div style="float:right" class="form-group">
                            <a asp-action="Create" class="btn btn-primary" style="background-color:darkgreen">&emsp; Add Employee &emsp;  <i class="bi bi-person-fill-add"></i></a>
                        </div>

                    </div>
                </div>
            </div>


        </div>
        <!--end::Row-->
    </div>
    <!--end::Container-->
</div>
<!--end::App Content Header-->
<!--begin::App Content-->
<div class="app-content" >
    <!--begin::Container-->
    <div class="container-fluid">
        <div class="card">
            <div class="card-header" style="height:210px;">

                <!--.............................................................................--!>

                <div class="card" style="margin-bottom:5px; height:140px;"> 

                    <div class="row" style="margin-top:10px;">  


                        <div class="col-6">

                            <div class="input-group-button mb-3  rounded">
                                <div class="row">
                                    <div class="col-6">

                                        <button style="text-decoration:none ; color:white; margin-right:50px ; margin-left:10px ; width:210px ; background-color:#165579" class="btn btn-primary w-40 dropdown-toggle" data-bs-auto-close="outside" type="button" data-bs-toggle="dropdown" aria-expanded="false" name="departmentIds">
                                            Select Department
                                        </button>
                                        <ul class="dropdown-menu" style="width:210px">

                                            <li class="dropdown-item">

                                                <input class="form-check-input" type="checkbox" value="1" id="one" name="departmentIds" >
                                                <label class="form-check-label" for="one" >
                                                    IT
                                                </label>
                                            </li>
                                            <li class="dropdown-item">
                                                <input class="form-check-input" type="checkbox" value="2" id="two" name="departmentIds" >
                                                <label class="form-check-label" for="two">
                                                    HR
                                                </label>
                                            </li>
                                            <li class="dropdown-item">
                                                <input class="form-check-input" type="checkbox" value="3" id="three" name="departmentIds">
                                                <label class="form-check-label" for="three">
                                                    BDE
                                                </label>
                                            </li>

                                        </ul>
                                    </div>
                                    <div class="col-6">

                                        <button style="text-decoration:none ; color:white; margin-left:20px; width:210px;  background-color:#165579" class="btn btn-primary w-40 dropdown-toggle ml-20" data-bs-auto-close="outside" type="button" data-bs-toggle="dropdown" aria-expanded="false" name="genderIds">
                                            Select Gender
                                        </button>
                                        <ul class="dropdown-menu" style="width:210px">
                                            <li class="dropdown-item">
                                                <input class="form-check-input" type="checkbox" value="1" id="one" name="genderIds" >
                                                <label class="form-check-label" for="one">
                                                    Female
                                                </label>
                                            </li>
                                            <li class="dropdown-item">
                                                <input class="form-check-input" type="checkbox" value="2" id="two" name="genderIds" >
                                                <label class="form-check-label" for="two">
                                                    Male
                                                </label>
                                            </li>
                                            <li class="dropdown-item">
                                                <input class="form-check-input" type="checkbox" value="3" id="three" name="genderIds" >
                                                <label class="form-check-label" for="three">
                                                    Other
                                                </label>
                                            </li>

                                        </ul>
                                    </div>

                                </div>

                            </div>

                        </div>

                        <!--LEFT 2-->
                        <div class="col-6">

                            <div class="row">
                                <div class="col-6">
                                    <div class="rangeslider">
                                        <label>Age</label> <br />
                                        <input id="minAgeId" class="min" name="minAge" type="range" min="18" max="60" value=@minAge  />
                                        <input id="maxAgeId" class="max" name="maxAge" type="range" min="18" max="60" value=@maxAge />
                                        <span class="range_min light left">@minAge</span>
                                        <span class="range_max light right">@maxAge</span>
                                    </div>
                                </div>



                                <div class="col-6">
                                    <div class="rangeslider">

                                        <label>Salary</label> <br />
                                        <input id="minSalaryId" class="minimum" name="minSalary" type="range" min="10000" max="150000" value=@minSalary />
                                        <input id="maxSalaryId" class="maximum" name="maxSalary" type="range" min="10000" max="150000" value=@maxSalary />
                                        <span id="SalarySpan" class="range_minimum " >@minSalary</span>
                                        <span id="SalarySpan1" class="range_maximum " style="margin-left:180px" >@maxSalary</span>
                                        <br />


                                    </div>
                                </div>

                            </div>

                        </div>


                    </div>

                    <div class="row" style="margin-top:20px;">
                        <div class="col-12">
                            <div style="float:right ; margin-right:10px;">
                                <input  type="submit" id="submitID" class="btn btn-primary" onclick="updateUrlWithQueryParams()" />

                                <a asp-action="Demo" class="btn btn-primary" >Clear </a>
                            </div>
                        </div>
                    </div>


                </div>

                <!--..............................................................................................-->

                <div class="row">

                    <div class="col-6">
                        <div style="float:left ; margin-right:10px; margin-bottom:5px  " class="form-group">
                            <form asp-action="demo" method="get">

                                <div class="input-group"  >
                                    <input class="form-control border-end-0 border" type="search" placeholder="search" id="searchId" name="searchKeyword" autocomplete="off" max-width:100%" style="width:350px;">
                                    <button class="btn btn-outline-secondary bg-white border-start-0 border-bottom-0 border " type="button">
                                        <i class="bi bi-search"></i>  
                                    </button>
                                </div>
                            </form>
                        </div>
                    </div>



                    <div class="col-6"  >
                        <div style="float:right;" class="form-group ">
                            <label>Select record size: </label>
                            <select id="pageSizeId" type="search" name="pageSize" min="5" max="50"  class="btn btn" onchange="updateUrlWithQueryParams()">
                                <option selected hidden >@pageSize</option>
                                <option  value="5" style="width:10px;">5</option>
                                <option  value="10">10</option>
                                <option  value="25">25</option>
                                <option  value="50">50</option>
                            </select>
                        </div>
                        <br />

                    </div>          
                </div>
            </div>
            <!-- /.card-header -->
            <div class="card-body ">
                <table id="example1" class="table  table-hover table-responsive">
                    <thead>
                        <tr>
                            <th>
                                @Html.ActionLink(@Html.DisplayName("First Name"), "Demo", "home", null, null, null, new
                                    {
                                        searchKeyword = searchKeyword,
                                        sortColumn = "name",
                                        sortDirection = sortDirection == "asc" ? "desc" : "asc",
                                        page = page,
                                        pageSize = pageSize,
                                        departmentIds = departmentIds,
                                        genderIds = genderIds,
                                        minAge = minAge,
                                        maxAge = maxAge,
                                        minSalary = minSalary,
                                        maxSalary = maxSalary

                                    }, new { @class = "CSSForHeaders" })

                                @if (sortDirection == "asc")
                                {
                                    <i class="bi bi-sort-alpha-down"></i>

                                }
                                else
                                {
                                    <i class="bi bi-sort-alpha-up-alt"></i>
                                }
                            </th>
                            <th>
                                @Html.ActionLink(@Html.DisplayName("LastName"), "Demo", "home", null, null, null, new
                                    {
                                        searchKeyword = searchKeyword,
                                        sortColumn = "LastName",
                                        sortDirection = sortDirection == "asc" ? "desc" : "asc",
                                        page = page,
                                        pageSize = pageSize,
                                        departmentIds = departmentIds,
                                        genderIds = genderIds,
                                        minAge = minAge,
                                        maxAge = maxAge,
                                        minSalary = minSalary,
                                        maxSalary = maxSalary
                                    }, new { @class = "CSSForHeaders" })
                                @if (sortDirection == "asc")
                                {
                                    <i class="bi bi-sort-alpha-down"></i>

                                }
                                else
                                {
                                    <i class="bi bi-sort-alpha-up-alt"></i>
                                }
                            </th>

                            <th>
                                @Html.ActionLink(Html.DisplayName("Gender"), "Demo", "home", null, null, null, new
                                    {
                                        searchKeyword = searchKeyword,
                                        sortColumn = "Gender",
                                        sortDirection = sortDirection == "asc" ? "desc" : "asc",
                                        page = page,
                                        pageSize = pageSize,
                                        departmentIds = departmentIds,
                                        genderIds = genderIds,
                                        minAge = minAge,
                                        maxAge = maxAge,
                                        minSalary = minSalary,
                                        maxSalary = maxSalary


                                    }, new { @class = "CSSForHeaders" })
                                @if (sortDirection == "asc")
                                {
                                    <i class="bi bi-sort-alpha-down"></i>

                                }
                                else
                                {
                                    <i class="bi bi-sort-alpha-up-alt"></i>
                                }

                            </th>

                            <th>
                                @Html.ActionLink(Html.DisplayName("Age"), "Demo", "home", null, null, null, new
                                    {
                                        searchKeyword = searchKeyword,
                                        sortColumn = "Age",
                                        sortDirection = sortDirection == "asc" ? "desc" : "asc",
                                        page = page,
                                        pageSize = pageSize,
                                        departmentIds = departmentIds,
                                        genderIds = genderIds,
                                        minAge = minAge,
                                        maxAge = maxAge,
                                        minSalary = minSalary,
                                        maxSalary = maxSalary
                                    }, new { @class = "CSSForHeaders" })

                                @if (sortDirection == "asc")
                                {
                                    <i class="bi bi-sort-numeric-down"></i>
                                }
                                else
                                {
                                    <i class="bi bi-sort-numeric-up-alt"></i>
                                }
                            </th>
                            <th>
                                @Html.DisplayName("City")
                            </th>

                            @*  <th>
                                @Html.DisplayName("Email")
                            </th>
                            <th>
                                @Html.DisplayName("Phone Number")
                            </th> *@
                            <th>
                                @Html.ActionLink(Html.DisplayName("Salary"), "Demo", "home", null, null, null, new
                                    {
                                        searchKeyword = searchKeyword,
                                        sortColumn = "Salary",
                                        sortDirection = sortDirection == "asc" ? "desc" : "asc",
                                        page = page,
                                        pageSize = pageSize,
                                        departmentIds = departmentIds,
                                        genderIds = genderIds,
                                        minAge = minAge,
                                        maxAge = maxAge,
                                        minSalary = minSalary,
                                        maxSalary = maxSalary
                                    }, new { @class = "CSSForHeaders" })

                                @if (sortDirection == "asc")
                                {
                                    <i class="bi bi-sort-numeric-down"></i>
                                }
                                else
                                {
                                    <i class="bi bi-sort-numeric-up-alt"></i>
                                }
                            </th>

                            <th>
                                @Html.ActionLink(Html.DisplayName("Department Name"), "Demo", "home", null, null, null, new
                                    {
                                        searchKeyword = searchKeyword,
                                        sortColumn = "DepartmentName",
                                        sortDirection = sortDirection == "asc" ? "desc" : "asc",
                                        page = page,
                                        pageSize = pageSize,
                                        departmentIds = departmentIds,
                                        genderIds = genderIds,
                                        minAge = minAge,
                                        maxAge = maxAge,
                                        minSalary = minSalary,
                                        maxSalary = maxSalary

                                    }, new { @class = "CSSForHeaders ml-4" })

                                @if (sortDirection == "asc")
                                {
                                    <i class="bi bi-sort-alpha-down"></i>

                                }
                                else
                                {
                                    <i class="bi bi-sort-alpha-up-alt"></i>
                                }

                            </th>
                            <th>Action</th>
                            @*  <th>Action</th> *@

                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model)
                        {
                            <tr>
                                <td>

                                    @item.FirstName
                                </td>
                                <td>

                                    @item.LastName
                                </td>
                                <td>
                                    @item.GenderName

                                </td>

                                <td>
                                    @item.Age
                                </td>
                                <td>
                                    @item.City
                                </td>

                                @*  <td>
                                    @item.EmailId
                                </td>
                                <td>
                                    @item.PhoneNumber
                                </td> *@
                                <td>
                                    @item.Salary <span>&#8377;</span>
                                </td>

                                <td style="text-align:center">
                                    @item.DepartmentName
                                </td>
                                <td>

                                    <a asp-action="Edit" asp-route-id="@item.EmployeeId" style="color:white;" id="EditButton" class="btn btn-primary"><i class="bi bi-pen"></i></a>
                                    <a asp-action="Details" asp-route-id="@item.EmployeeId" style="color:white;" class="btn primary" id="DetailButton"><i class="bi bi-person-lines-fill"></i></a>
                                    <a asp-action="Delete" asp-route-id="@item.EmployeeId" style="color:white;" class="btn primary" id="DeleteButton"><i class="bi bi-trash"></i></a>

                                </td>
                            </tr>
                        }
                    </tbody>

                </table>




                <div class="col-sm-12 col-md-5">
                    @*                     <div class="dataTables_info" id="example1_info" role="status" arial-live="polite">Showing @((page-1)*pageSize+1) to @if(page*pageSize<=totalRecords){@(page*pageSize)} else{@(totalRecords)} records of @totalRecords</div>
 *@
            <div class="dataTables_info" id="example1_info" role="status" arial-live="polite">
                Showing @if (totalRecords == 0)
                        {
                            @(totalRecords)
                        }
                        else
                        {
                            @((page - 1) * pageSize + 1)
                        }
                        to
                        @if (page * pageSize <= totalRecords)
                        {
                            @(page * pageSize)
                        }
                        else
                        {
                            @(totalRecords)
                        } records of @totalRecords</div>                        
                         </div>


                </div>


                <nav>
                    <ul class="pagination">
                        @if (page > 1)
                        {
                            <li class="page-item">
                                <a class="page-link" href="?page=@(page - 1)&pageSize=@pageSize&sortColumn=@sortColumn&sortDirection=@sortDirection&searchKeyword=@searchKeyword&genderIds=@genderIds&departmentIds=@departmentIds&minAge=@minAge&maxAge=@maxAge&minSalary=@minSalary&maxSalary=@maxSalary">Previous</a>
                            </li>
                        }

                        @for (int i = page; i <= page; i++)
                        {
                            <li class="page-item@(i==page?"active":"")">
                                <a class="page-link" href="?page=@i&sortColumn=@sortColumn&sortDirection=@sortDirection&searchKeyword=@searchKeyword">@i</a>
                            </li>
                        }

                        @if (page < totalPages)
                        {
                            <li class="page-item">
                                <a class="page-link" href="?page=@(page + 1)&pageSize=@pageSize&sortColumn=@sortColumn&sortDirection=@sortDirection&searchKeyword=@searchKeyword&genderIds=@genderIds&departmentIds=@departmentIds&minAge=@minAge&maxAge=@maxAge&minSalary=@minSalary&maxSalary=@maxSalary">Next</a>
                            </li>
                        }
                    </ul>
                </nav>




            </div>
            <!-- /.card-body -->
        </div>
        <!-- /.card -->
        <div>
     </div>











@*////////////////DropDown///////////////////////////*@

<script>
    
    // Function to gather selected values and update the URL
    function updateUrlWithQueryParams() {
        // Get selected departments
        var departmentIds = [];
        var genderIds = [];

        // Loop through all department checkboxes and collect selected ones
        document.querySelectorAll('input[name="departmentIds"]:checked').forEach(function(checkbox) {
            departmentIds.push(checkbox.value);
        });

        // Loop through all gender checkboxes and collect selected ones
        document.querySelectorAll('input[name="genderIds"]:checked').forEach(function(checkbox) {
            genderIds.push(checkbox.value);
        });

       var minAge = document.getElementById('minAgeId').value;
       var maxAge = document.getElementById('maxAgeId').value;

       var minSalary = $('#SalarySpan').text();
       var maxSalary = $('#SalarySpan1').text();

       var pageSize = document.getElementById('pageSizeId').value;



        // Build the query string
        var queryString = '';

        if (departmentIds.length > 0) {
            queryString += 'departmentIds=' + departmentIds.join(',') + '&';
        }
        if (genderIds.length > 0) {
            queryString += 'genderIds=' + genderIds.join(',')+ '&';
        }
        if (minAge) {
            queryString += 'minAge=' + minAge + '&';
        }
        if (maxAge) {
            queryString += 'maxAge=' + maxAge +'&';
        }
        if (minSalary) {
            queryString += 'minSalary=' + minSalary +'&';
        }
        if (maxSalary) {
            queryString += 'maxSalary=' + maxSalary +'&';
        }
        if (pageSize) {
            queryString += 'pageSize=' + pageSize;
        }

        // Remove the last '&' if present
        if (queryString.endsWith('&')) {
            queryString = queryString.slice(0, -1);
        }

        // Update the browser's URL and reload the page
        var currentUrl = window.location.href.split('?')[0]; // Remove existing query params
        var newUrl = currentUrl + '?' + queryString;

        window.location.href = newUrl; // Reload the page with the new URL
    }

    // Function to restore checkbox selections based on query parameters
    function restoreSelectionsFromQueryParams() {
        // Get query parameters
        var params = new URLSearchParams(window.location.search);

        // Restore department selections
        var departmentIds = params.get('departmentIds');
        if (departmentIds) {
            departmentIds.split(',').forEach(function(id) {
                var checkbox = document.querySelector(`input[name="departmentIds"][value="${id}"]`);
                if (checkbox) {
                    checkbox.checked = true;
                }
                
            });
        }

        // Restore gender selections
        var genderIds = params.get('genderIds');
        if (genderIds) {
            genderIds.split(',').forEach(function(id) {
                var checkbox = document.querySelector(`input[name="genderIds"][value="${id}"]`);
                if (checkbox) {
                    checkbox.checked = true;
                }

            });
        }

    }

    // Attach the updateUrlWithQueryParams function to checkbox change events
    // document.getElementById('submit').addEventListener('click',updateUrlWithQueryParams());


    // Restore checkbox states on page load
    window.addEventListener('load', restoreSelectionsFromQueryParams);
    // window.addEventListener('click', restoreSelectionsFromQueryParams);
    // window.addEventListener('drag',restoreSelectionsFromQueryParams);


</script>




@*Age*@

<script>
    
    (function() {

        function rangeInputChangeEventHandler(e) {
            var rangeGroup = $(this).attr('name'),
                minBtn = $(this).parent().children('.min'),
                maxBtn = $(this).parent().children('.max'),
                range_min = $(this).parent().children('.range_min'),
                range_max = $(this).parent().children('.range_max'),
                minVal = parseInt($(minBtn).val()),
                maxVal = parseInt($(maxBtn).val()),
                origin = $(this).attr('class');

            // Ensure minimum age does not exceed maximum age minus a threshold (e.g., 5 years)
            if (origin === 'min' && minVal > maxVal - 5) {
                $(minBtn).val(maxVal - 5);
            }

            // Update minimum age display
            minVal = parseInt($(minBtn).val());
            $(range_min).html(minVal);

            // Ensure maximum age does not fall below minimum age plus a threshold (e.g., 5 years)
            if (origin === 'max' && maxVal - 5 < minVal) {
                $(maxBtn).val(minVal + 5);
            }

            // Update maximum age display
            maxVal = parseInt($(maxBtn).val());
            $(range_max).html(maxVal);
        }

        // Attach the event handler to input type="range"
        $('input[type="range"]').on('input', rangeInputChangeEventHandler);
    })();
</script>






@*Salary*@


<script>
    
    (function() {
        function rangeInputChangeEventHandler(e) {
            var rangeGroup = $(this).attr('name'),
                minBtn = $(this).parent().children('.minimum'),
                maxBtn = $(this).parent().children('.maximum'),
                range_min = $(this).parent().children('.range_minimum'),
                range_max = $(this).parent().children('.range_maximum'),
                minVal = parseInt($(minBtn).val()),
                maxVal = parseInt($(maxBtn).val()),
                origin = $(this).attr('class');

            // Ensure the minimum value does not exceed the maximum by a difference of 5
            if (origin === 'minimum' && minVal > maxVal - 5) {
                $(minBtn).val(maxVal - 5);
            }

            // Update and round the minimum value to the nearest 1000
            minVal = Math.round(parseInt($(minBtn).val()) / 1000) * 1000;
            $(range_min).html(minVal);

            // Ensure the maximum value does not fall below the minimum + 5 and stays at the range's endpoint
            if (origin === 'maximum') {
                maxVal = Math.max(maxVal, minVal + 5); // Ensure logical gap
                maxVal = Math.round(maxVal / 1000) * 1000; // Round to nearest 1000
               /*  $(maxBtn).val(maxVal); */ // Ensure it's set at the slider's max endpoint
            }

            // Update and round the maximum value to the nearest 1000
            maxVal = Math.round(parseInt($(maxBtn).val()) / 1000) * 1000;
            $(range_max).html(maxVal);
        }

        // Attach the event handler to input type="range"
        $('input[type="range"]').on('input', rangeInputChangeEventHandler);
    })();
</script>







